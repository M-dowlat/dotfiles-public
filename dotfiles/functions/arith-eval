#!/usr/bin/env zsh

local _arith_eval

# Remove commas.
() {
  emulate -L zsh -o extended_glob
  local match mbegin mend
  _arith_eval=${(j: :)${@//(#b)([0-9]),([0-9][0-9][0-9])/$match[1]$match[2]}}
} "$@"

# Do the math carefully: respect user options and avoid shadowing parameters.
typeset -F17 _arith_eval || return

emulate -L zsh -o extended_glob
local match mbegin mend long short x

# Find the shortest exact representation.
# We are using =printf because printf in zsh-bin is buggy.
long=$(=printf "%.16f" $_arith_eval) || return
short=$long
for x in {0..16}; do
  short=$(=printf "%.${x}f" $_arith_eval) || return
  (( short == long )) && break
done

# Add commas.
while true; do
  x=${short/#(#b)(|-)([0-9]##)([0-9][0-9][0-9])(|[,.eE])/$match[1]$match[2],$match[3]$match[4]}
  [[ $x == $short ]] && break
  short=$x
done

print -r -- $short
